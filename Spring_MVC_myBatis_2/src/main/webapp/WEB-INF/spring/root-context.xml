<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!--1. properties등록 -->
	<context:property-placeholder
		location="classpath:com/config/jdbc.properties" />

	<!-- 2. DataSource생성 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${oracle.jdbc}"></property>
		<property name="url" value="${oracle.url}"></property>
		<property name="username" value="${oracle.userid}"></property>
		<property name="password" value="${oracle.passwd}"></property>
	</bean>

	<!-- tx -->
	<!-- 3.tx처리용 txManager생성 및 tx annotaion활성화 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/> -->
	<tx:annotation-driven
		transaction-manager="txManager" />

	<!-- 4 SqlSessonFactoryBean생성, mapper지정, alias지정 -->
	<bean id="sessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations">
			<list>
				<value>classpath:com/config/DeptMapper.xml</value>
			</list>
		</property>
		<property name="typeAliases">
			<list>
				<value>com.dto.DeptDTO</value><!-- dto클래스에서 alias명 지정 @Alias('alias명') -->
			</list>
		</property>
	</bean>

	<!-- 5.마지막 SqlSessinTemplate 생성, SqlSession과 동일한 기능 -->
	<bean id="sessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory"
			ref="sessionFactory"></constructor-arg>
	</bean>

</beans>
